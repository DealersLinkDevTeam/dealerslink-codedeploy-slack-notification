{
  "name": "dealerslink-codedeploy-slack-notification",
  "version": "1.0.1",
  "description": "An AWS Lambda-SNS function that reports CodeDeploy statuses to Slack",
  "main": "index.js",
  "config": {
    "s3BucketName": "YOUR_UNIQUE_BUCKET_NAME",
    "region": "YOUR_AWS_REGION",
    "accountId": "YOUR_ACCOUNT_ID",
    "functionName": "YOUR_LAMBDA_FUNCTION_NAME",
    "snsTopicName": "YOUR_SNS_TOPIC_NAME",
    "cloudFormationStackName": "YOUR_CLOUDFORMATION_STACK_NAME"
  },
  "scripts": {
    "test": "nyc mocha",
    "build": "gulp",
    "fix": "gulp fix",
    "lint": "gulp lint",
    "coverage": "nyc --reporter=lcov mocha && cat ./coverage/lcov.info | codacy-coverage",
    "pretty": "gulp pretty",
    "config": "node ./scripts/configure.js",
    "deconfig": "node ./scripts/deconfigure.js",
    "aws-config": "node ./scripts/aws-configure.js",
    "aws-deconfig": "node ./scripts/aws-deconfigure.js",
    "invoke-lambda": "aws lambda invoke --function-name $npm_package_config_functionName --region $npm_package_config_region --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
    "create-bucket": "aws s3 mb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "delete-bucket": "aws s3 rb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "describe": "aws cloudformation describe-stacks --stack-name $npm_package_config_cloudFormationStackName --region $npm_package_config_region --query Stacks[].Outputs --output table",
    "package": "aws cloudformation package --template ./cloudformation.yaml --s3-bucket $npm_package_config_s3BucketName --output-template packaged-sam.yaml --region $npm_package_config_region",
    "deploy": "aws cloudformation deploy --template-file packaged-sam.yaml --stack-name $npm_package_config_cloudFormationStackName --capabilities CAPABILITY_IAM --region $npm_package_config_region",
    "package-deploy": "npm run package && npm run deploy",
    "delete-stack": "aws cloudformation delete-stack --stack-name $npm_package_config_cloudFormationStackName --region $npm_package_config_region",
    "setup": "(aws s3api get-bucket-location --bucket $npm_package_config_s3BucketName --region $npm_package_config_region || npm run create-bucket) && npm run package-deploy"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/DealersLinkDevTeam/dealerslink-codedeploy-slack-notification.git"
  },
  "author": "Jay Reardon <jay.reardon@dealerslink.com>",
  "license": "UNLICENSED",
  "bugs": {
    "url": "https://github.com/DealersLinkDevTeam/dealerslink-codedeploy-slack-notification/issues"
  },
  "homepage": "https://github.com/DealersLinkDevTeam/dealerslink-codedeploy-slack-notification#readme",
  "devDependencies": {
    "chai": "^4.1.2",
    "codacy-coverage": "^3.0.0",
    "commander": "^2.16.0",
    "gulp": "^3.9.1",
    "gulp-eslint": "^5.0.0",
    "gulp-mocha": "^6.0.0",
    "gulp-prettier": "^2.0.0",
    "mocha": "^5.2.0",
    "nyc": "^12.0.2",
    "prettier": "^1.13.7"
  },
  "dependencies": {
    "@dealerslink/lodash-extended": "^1.0.0",
    "ajv": "^6.5.2",
    "aws-sdk": "^2.270.1"
  }
}
